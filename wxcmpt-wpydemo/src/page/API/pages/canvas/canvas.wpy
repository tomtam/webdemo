<style lang="less">
  .canvas-element-wrapper {
    display: block;
    margin-bottom: 100rpx;
  }
  .canvas-element {
    width: 100%;
    height: 500rpx;
    background-color: #ffffff;
  }
  .canvas-buttons {
    padding: 30rpx 50rpx 10rpx;
    width: 100%;
    height: 360rpx;
    box-sizing: border-box;
  }
  .canvas-button {
    float: left;
    line-height: 2;
    width: 300rpx;
    margin: 15rpx 12rpx;
  }
</style>

<template>
  <import src="../../../common/head.wxml" />
  <import src="../../../common/foot.wxml" />
  <view class="container">
    <template is="head" data="{{title: 'createContext'}}" />
    <view class="page-body">
      <view class="page-section">
        <canvas class="canvas-element" canvas-id="canvas"></canvas>
        <scroll-view class="canvas-buttons" scroll-y="true">
          <block wx:for="{{methodList}}" wx:for-item="method" wx:key="*this">
            <button class="canvas-button" bindtap="{{method}}">{{method}}</button>
          </block>
          <button class="canvas-button" bindtap="toTempFilePath" type="primary">toTempFilePath</button>
        </scroll-view>
      </view>
    </view>
    <template is="foot" />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Example from './example'
  export default class Canvas extends wepy.page {
    config = {
      navigationBarTitleText: '创建画布'
    }
    data = {
      methodList: ['1', '2']
    }
    onLoad() {
      let that = this
      this.context = wx.createContext()
      let methods = Object.keys(Example)
      this.methodList = methods
      console.log(this.$wxpage)
      this.methodList.forEach(function(method) {
        that.$wxpage[method] = function() {
          Example[method](that.context)
          let actions = that.context.getActions()
          wx.drawCanvas({
            canvasId: 'canvas',
            actions: actions
          })
        }
      })
      this.$apply()
    }
    methods = {
      toTempFilePath() {
        wx.canvasToTempFilePath({
          canvasId: 'canvas',
          success: function(res) {
            console.log(res)
          },
          fail: function(res) {
            console.log(res)
          }
        })
      }
    }
  }
</script>
