<style lang="less">
  .page-section-spacing {
    margin-top: 60rpx;
  }
  .scroll-view_H {
    white-space: nowrap;
  }
  .scroll-view-item {
    height: 300rpx;
  }
  .scroll-view-item_H {
    display: inline-block;
    width: 100%;
    height: 300rpx;
  }
</style>

<template>
  <import src="../../../common/head.wxml" />
  <import src="../../../common/foot.wxml" />
  <view class="container">
    <template is="head" data="{{title: 'scroll-view'}}" />
    <view class="page-body">
      <view class="page-section">
        <view class="page-section-title">
          <text>Vertical Scroll\n纵向滚动</text>
        </view>
        <view class="page-section-spacing">
          <scroll-view scroll-y="true" style="height: 300rpx;" bindscrolltoupper="upper" bindscrolltolower="lower" bindscroll="scroll" scroll-into-view="{{toView}}" scroll-top="{{scrollTop}}">
            <view id="demo1" class="scroll-view-item demo-text-1"></view>
            <view id="demo2" class="scroll-view-item demo-text-2"></view>
            <view id="demo3" class="scroll-view-item demo-text-3"></view>
          </scroll-view>
        </view>
      </view>
      <view class="page-section">
        <view class="page-section-title">
          <text>Horizontal Scroll\n横向滚动</text>
        </view>
        <view class="page-section-spacing">
          <scroll-view class="scroll-view_H" scroll-x="true" bindscroll="scroll" style="width: 100%">
            <view id="demo1" class="scroll-view-item_H demo-text-1"></view>
            <view id="demo2" class="scroll-view-item_H demo-text-2"></view>
            <view id="demo3" class="scroll-view-item_H demo-text-3"></view>
          </scroll-view>
        </view>
      </view>
    </view>
    <template is="foot" />
  </view>
</template>

<script>
  import wepy from 'wepy'
  export default class ScrollView extends wepy.page {
    config = {
      navigationBarTitleText: 'scroll-view'
    }
    data = {
      toView: 'green',
      scrollTop: 0
    }
    methods = {
      upper(e) {
        console.log(e)
      },
      lower(e) {
        console.log(e)
      },
      scroll(e) {
        console.log(e)
      },
      tap(e) {
        let order = ['demo1', 'demo2', 'demo3']
        for (let i = 0; i < order.length; ++i) {
          if (order[i] === this.toView) {
            this.toView = order[i + 1]
            this.scrollTop = (i + 1) * 200
            break
          }
        }
      },
      tapMove: function(e) {
        this.scrollTop = this.scrollTop + 10
      }
    }
  }
</script>
